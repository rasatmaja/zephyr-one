name: Zephyr One - Pull Request

on: [pull_request]

jobs:
  lint:
    name: Go Linting
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.16.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Lint code base
      run: |
          go get golang.org/x/lint/golint
          golint -set_exit_status ./...

  test:
    name: Go Unit Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.16.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Running Unit Test
      run: |
        sudo timedatectl set-timezone Asia/Jakarta
        go test ./... -cover -vet -all -short -covermode=count -coverprofile=cover.out
    - name: Generate code coverage    
      run: |
        go tool cover -func cover.out -o coverage.out
    - name: 'Upload Go code coverage artifact'
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage.out
        retention-days: 5    
  
  publish-code-coverage:
    name: Publish Code Coverage
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage
      - name: Display code coverage
        shell: bash
        run: |
          ls
          cat coverage.out
      - name: Read code coverage file
        uses: andstor/file-reader-action@v1
        with:
          path: "coverage.out"    
      - name: Publish code coverage into PR
        uses: actions/github-script@v4
        env:
          CONTENT: ${{ steps.read_file.outputs.contents }}
        with:
          script: |
            var content = process.env.CONTENT
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ *Code Coverage* \n' + '``` \n' + content + ' \n ```'
            })    

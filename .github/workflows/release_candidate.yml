name: Zephyr One - Release Candidate

on: [pull_request]
  # push:
  #   tags:
  #     - 'v*-rc'

jobs:
  # build-release:
  #   name: Build Release Candidate
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Setup timezone to Asia/Jakarta
  #     run: |
  #       sudo timedatectl set-timezone Asia/Jakarta  
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Create Release Cadidate
  #     id: create_release
  #     uses: actions/create-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       tag_name: ${{ github.ref }}
  #       release_name: ${{ github.ref }}
  #       body: | 

  #       draft: false
  #       prerelease: true
  
  deploy-app:   
    # needs: build-release
    name: Deploy App
    runs-on: ubuntu-latest
    env:
      APP_NAME: zephyr-one
      APP_MAIN_PATH: cmd/main/main.go
    steps:
    - uses: chrnorm/deployment-action@releases/v1
      name: Create GitHub deployment
      id: deployment
      with:
        token: "${{ github.token }}"
        target_url: https://zephryone.rasatmaja.com/docs/index.html
        environment: staging
        initial_status: "queued"

    - name: Set up Go 1.16.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
      id: go

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Update deployment status (in-progress)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target_url: https://zephryone.rasatmaja.com/docs/index.html
        state: "in_progress"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Building Go Apps
      run: |
          go build -a -ldflags '-extldflags "-static"' -o ${{ env.APP_NAME }}.app ${{ env.APP_MAIN_PATH }} 

    - name: Deploy app into server via SSH
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        source: "${{ env.APP_NAME }}.app, Makefile, ${{ env.APP_NAME }}.json"
        target: "/home/rasatmaj/zephryone.rasatmaja.com/"

    - name: Execute app into server via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          cd /home/rasatmaj/zephryone.rasatmaja.com/
          make deploy-domainesia

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target_url: https://zephryone.rasatmaja.com/docs/index.html
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target_url: https://zephryone.rasatmaja.com/docs/index.html
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}            
     
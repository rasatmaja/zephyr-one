swagger: '2.0'
info:
  description: >-
    A simple API that serving a users AAA (Authentication, Authorization ,
    Accounting) service. The purpose of this project is create AAA service using
    Golang and also display a documentation of its API using Swagger UI.
  version: 0.0.1
  title: Zephyr One
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: contact@rasio.dev
  license:
    name: MIT License
    url: 'https://github.com/rasatmaja/zephyr-one/raw/main/LICENSE'
externalDocs:
  description: Find out more about Zephry One Project
  url: 'https://github.com/rasatmaja/zephyr-one'
basePath: /
tags:
  - name: Auth
    description: Access to authentication and authorization service

schemes:
  - http
  - https
# Start Define Path  
paths:
  # Start Authentication and Authorization
  /register:
    post:
      tags:
        - Auth
      consumes:
        - application/json  
      parameters:
        - in: body
          name: account
          description: a request to register a user.
          schema:
            type: object
            required:
              - username
              - name
              - passphrase
            properties:
              username:
                type: string
                example: zephryone
              name:
                type: string
                example: Zephry One
              passphrase:
                type: string
                example: mirror mirror on the wall what bird has widest wings     
      responses:
        '201':
          description: a response when operation success
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 201
              status:
                type: string
                example: created  
              message:
                type: string
                example: successfully registered
  /login:
    post:
      tags:
        - Auth
      consumes:
        - application/json  
      parameters:
        - in: body
          name: account
          description: a request to authenticate a user credentials
          schema:
            type: object
            required:
              - username
              - passphrase
            properties:
              username:
                type: string
                example: zephryone
              passphrase:
                type: string
                example: mirror mirror on the wall what bird has widest wings     
      responses:
        '200':
          description: a response when user successfully authenticate
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              status:
                type: string
                example: success  
              message:
                type: string
                example: user successfully authenticate
              data:
                type: object
                example:
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ6ZXBoZXJ5LW9uZSIsInN1YiI6InJhc2lvMjkiLCJleHAiOjE2Mjg3NjE3MjAsIm5iZiI6MTYyNjE2OTcyMCwiaWF0IjoxNjI2MTY5NzIwLCJqdGkiOiIwMmY5Zjc5Zi0xMWM2LTRhNmQtYjM4OC01NjRiM2RlMzc5ZDEifQ.EI22FGbfUpAEeqkS-vlCyYdxJg1CaxOTGIVvsHfBhhc            
  # End Authentication and Authorization
# End Define Path

# Start Secutiry Definition  
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
# End Secutiry Definition      

# Start Definition
definitions:
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      status:
        type: string
      message:
        type: string
# End Definition        
